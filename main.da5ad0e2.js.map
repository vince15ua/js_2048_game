{"version":3,"sources":["scripts/main.js"],"names":["size","min","max","isMoved","score","excludeIds","startMsg","document","querySelector","loseMsg","winMsg","getRandom","Math","floor","random","getId","i","j","load","id1","id2","getElementById","innerHTML","classList","add","combineCells","newId","element","elemValue","newElement","newElemValue","indexOf","push","replace","remove","moveToEmptyCell","value","up","id","moveUp","update","startsWith","arr","split","parseInt","k","nId","elem","newElem","elValue","newElValue","left","moveLeft","endsWith","down","moveDown","right","moveRight","ids","idNew","length","allFilled","idCheck","checkGameOver","isOver","body","addEventListener","e","preventDefault","code","start","first","removeEventListener","second","className"],"mappings":"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","file":"main.da5ad0e2.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable max-len */\n'use strict';\n\nconst size = 4;\nconst min = 0;\nconst max = size - 1;\n\nlet isMoved = false;\nlet score = 0;\n\nlet excludeIds = [];\nconst startMsg = document.querySelector('.message-start');\nconst loseMsg = document.querySelector('.message-lose');\nconst winMsg = document.querySelector('.message-win');\n\nfunction getRandom() {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction getId() {\n  const i = getRandom();\n  const j = getRandom();\n\n  return `${i}${j}`;\n}\n\nfunction load() {\n  const id1 = getId();\n  let id2 = '';\n\n  while (true) {\n    id2 = getId();\n\n    if (id1 !== id2) {\n      break;\n    }\n  }\n\n  document.getElementById(id1).innerHTML = '2';\n  document.getElementById(id2).innerHTML = '2';\n\n  document.getElementById(id1).classList.add('field-cell--2');\n  document.getElementById(id2).classList.add('field-cell--2');\n\n  score = 0;\n  document.querySelector('.game-score').innerHTML = score;\n\n  return false;\n}\n\nfunction combineCells(newId, element, elemValue, newElement, newElemValue) {\n  if (elemValue === newElemValue) {\n    if (excludeIds.indexOf(newId) === -1) {\n      excludeIds.push(newId);\n      newElement.innerHTML = (elemValue + newElemValue);\n      newElement.classList.replace(`field-cell--${newElemValue}`, `field-cell--${elemValue + newElemValue}`);\n      element.innerHTML = '';\n      element.classList.remove(`field-cell--${elemValue}`);\n      isMoved = true;\n      score += (elemValue + newElemValue);\n    }\n  }\n}\n\nfunction moveToEmptyCell(newId, value, elemValue) {\n  document.getElementById(newId).innerHTML = value.innerHTML;\n  document.getElementById(newId).classList.add(`field-cell--${elemValue}`);\n  value.innerHTML = '';\n  value.classList.remove(`field-cell--${elemValue}`);\n  isMoved = true;\n}\n\nfunction up() {\n  isMoved = false;\n  excludeIds = [];\n\n  for (let j = min; j <= max; j++) {\n    for (let i = min; i <= max; i++) {\n      const id = `${i}${j}`;\n\n      if (document.getElementById(id).innerHTML !== '') {\n        moveUp(id);\n      }\n    }\n  }\n\n  if (isMoved === true) {\n    update();\n  }\n\n  return false;\n}\n\nfunction moveUp(id) {\n  if (!id.startsWith(min)) {\n    const arr = id.split('');\n    const i = parseInt(arr[0]);\n    const j = parseInt(arr[1]);\n\n    for (let k = (i - 1); k >= min; k--) {\n      const nId = `${k}${j}`;\n      const elem = document.getElementById(`${k + 1}${j}`);\n      const newElem = document.getElementById(nId);\n\n      const elValue = parseInt(elem.innerHTML);\n      const newElValue = parseInt(newElem.innerHTML);\n\n      if (newElem.innerHTML !== '') {\n        combineCells(nId, elem, elValue, newElem, newElValue);\n\n        break;\n      } else {\n        moveToEmptyCell(nId, elem, elValue);\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction left() {\n  isMoved = false;\n  excludeIds = [];\n\n  for (let i = min; i <= max; i++) {\n    for (let j = min; j <= max; j++) {\n      const id = `${i}${j}`;\n\n      if (document.getElementById(id).innerHTML !== '') {\n        moveLeft(id);\n      }\n    }\n  }\n\n  if (isMoved === true) {\n    update();\n  }\n\n  return false;\n}\n\nfunction moveLeft(id) {\n  if (!id.endsWith(min)) {\n    const arr = id.split('');\n    const i = parseInt(arr[0]);\n    const j = parseInt(arr[1]);\n\n    for (let k = (j - 1); k >= min; k--) {\n      const nId = `${i}${k}`;\n      const elem = document.getElementById(`${i}${k + 1}`);\n      const newElem = document.getElementById(nId);\n\n      const elValue = parseInt(elem.innerHTML);\n      const newElValue = parseInt(newElem.innerHTML);\n\n      if (newElem.innerHTML !== '') {\n        combineCells(nId, elem, elValue, newElem, newElValue);\n\n        break;\n      } else {\n        moveToEmptyCell(nId, elem, elValue);\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction down() {\n  isMoved = false;\n  excludeIds = [];\n\n  for (let j = min; j <= max; j++) {\n    for (let i = max; i >= min; i--) {\n      const id = `${i}${j}`;\n\n      if (document.getElementById(id).innerHTML !== '') {\n        moveDown(id);\n      }\n    }\n  }\n\n  if (isMoved === true) {\n    update();\n  }\n\n  return false;\n}\n\nfunction moveDown(id) {\n  if (!id.startsWith(max)) {\n    const arr = id.split('');\n    const i = parseInt(arr[0]);\n    const j = parseInt(arr[1]);\n\n    for (let k = (i + 1); k <= max; k++) {\n      const nId = `${k}${j}`;\n      const elem = document.getElementById(`${k - 1}${j}`);\n      const newElem = document.getElementById(nId);\n\n      const elValue = parseInt(elem.innerHTML);\n      const newElValue = parseInt(newElem.innerHTML);\n\n      if (newElem.innerHTML !== '') {\n        combineCells(nId, elem, elValue, newElem, newElValue);\n\n        break;\n      } else {\n        moveToEmptyCell(nId, elem, elValue);\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction right() {\n  isMoved = false;\n  excludeIds = [];\n\n  for (let i = min; i <= max; i++) {\n    for (let j = max; j >= min; j--) {\n      const id = `${i}${j}`;\n\n      if (document.getElementById(id).innerHTML !== '') {\n        moveRight(id);\n      }\n    }\n  }\n\n  if (isMoved === true) {\n    update();\n  }\n\n  return false;\n}\n\nfunction moveRight(id) {\n  if (!id.endsWith(max)) {\n    const arr = id.split('');\n    const i = parseInt(arr[0]);\n    const j = parseInt(arr[1]);\n\n    for (let k = (j + 1); k <= max; k++) {\n      const nId = `${i}${k}`;\n      const elem = document.getElementById(`${i}${k - 1}`);\n      const newElem = document.getElementById(nId);\n\n      const elValue = parseInt(elem.innerHTML);\n      const newElValue = parseInt(newElem.innerHTML);\n\n      if (newElem.innerHTML !== '') {\n        combineCells(nId, elem, elValue, newElem, newElValue);\n\n        break;\n      } else {\n        moveToEmptyCell(nId, elem, elValue);\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction update() {\n  if (score === 2048) {\n    winMsg.classList.remove('hidden');\n  }\n\n  const ids = [];\n\n  for (let i = min; i <= max; i++) {\n    for (let j = min; j <= max; j++) {\n      const idNew = `${i}${j}`;\n\n      if (document.getElementById(idNew).innerHTML === '') {\n        ids.push(idNew);\n      }\n    }\n  }\n\n  const id = ids[Math.floor(Math.random() * ids.length)];\n\n  document.getElementById(id).innerHTML = '2';\n  document.getElementById(id).classList.add('field-cell--2');\n\n  let allFilled = true;\n\n  for (let i = min; i <= max; i++) {\n    for (let j = min; j <= max; j++) {\n      const idCheck = `${i}${j}`;\n\n      if (document.getElementById(idCheck).innerHTML === '') {\n        allFilled = false;\n        break;\n      }\n    }\n  }\n\n  document.querySelector('.game-score').innerHTML = score;\n\n  if (allFilled) {\n    checkGameOver();\n  }\n}\n\nfunction checkGameOver() {\n  let isOver = true;\n\n  for (let j = min; j <= max; j++) {\n    for (let i = min; i <= (max - 1); i++) {\n      const value = parseInt(document.getElementById(`${i}${j}`).innerHTML);\n      const newValue = parseInt(document.getElementById(`${i + 1}${j}`).innerHTML);\n\n      if (value === newValue) {\n        isOver = false;\n        break;\n      }\n    }\n  }\n\n  if (isOver === true) {\n    for (let i = min; i <= max; i++) {\n      for (let j = min; j <= (max - 1); j++) {\n        const value = parseInt(document.getElementById(`${i}${j}`).innerHTML);\n        const newValue = parseInt(document.getElementById(`${i}${j + 1}`).innerHTML);\n\n        if (value === newValue) {\n          isOver = false;\n          break;\n        }\n      }\n    }\n  }\n\n  if (isOver) {\n    loseMsg.classList.remove('hidden');\n  }\n\n  return false;\n}\n\ndocument.body.addEventListener('keydown', (e) => {\n  e.preventDefault();\n\n  switch (e.code) {\n    case 'ArrowLeft':\n      left();\n      break;\n    case 'ArrowUp':\n      up();\n      break;\n    case 'ArrowRight':\n      right();\n      break;\n    case 'ArrowDown':\n      down();\n      break;\n  }\n});\n\nconst start = document.querySelector('.button');\n\nstart.addEventListener('click', first);\n\nfunction first() {\n  startMsg.classList.add('hidden');\n\n  load();\n\n  start.classList.add('restart');\n  start.innerHTML = 'Restart';\n\n  start.removeEventListener('click', first);\n\n  start.addEventListener('click', second);\n\n  function second() {\n    loseMsg.classList.add('hidden');\n    winMsg.classList.add('hidden');\n\n    for (let i = min; i <= max; i++) {\n      for (let j = min; j <= max; j++) {\n        const id = `${i}${j}`;\n\n        document.getElementById(id).innerHTML = '';\n        document.getElementById(id).className = 'field-cell';\n      }\n    }\n    load();\n  }\n}\n"]}